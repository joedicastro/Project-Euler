#!/usr/bin/env python2
# -*- coding: utf8 -*-

"""
Highly divisible triangular number
Problem 12
http://projecteuler.net/problem=12

The sequence of triangle numbers is generated by adding the natural numbers. So
the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten
terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred
divisors?
"""


def num_divisors(num):
    i = 2
    limit = num - 1
    count = 2
    while i < limit:
        if num % i == 0:
            count += 2
            limit = num / i
        i += 1
    return count


def triangle_num(pos):
    return sum(xrange(1, pos + 1))

position = 1
number_of_divisors = 0

while number_of_divisors < 500:
    triangle_number = triangle_num(position)
    number_of_divisors = num_divisors(triangle_number)
    position += 1

print triangle_number
